AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  StackName:
    Type: String
    Default: apidemo
  EnvironmentIdentifier:
    Type: String
    Default: sandbox
  EnvironmentName:
    Type: String
    Default: Sandbox
  EnvironmentSubdomain:
    Type: String
    Default: 'sandbox.'

Resources:


# ###################################################
# # S3
# ###################################################

# #################
# # UserFileBucket
# #################

#   UserFileBucket:
#     Type: AWS::S3::Bucket
#     DeletionPolicy: Retain
#     Properties:
#       # AccessControl: PublicRead
#       BucketName:
#         Fn::Sub: ${StackName}-${EnvironmentIdentifier}-userfiles
#       CorsConfiguration:
#         CorsRules:
#           - AllowedHeaders:
#               - '*'
#             AllowedMethods:
#               - GET
#               - PUT
#               # - POST
#               # - DELETE
#             AllowedOrigins:
#               - '*'
#             ExposedHeaders:
#               - Date
#             MaxAge: 3600
#       # PublicAccessBlockConfiguration:
#       #   BlockPublicAcls : false
#       #   BlockPublicPolicy : false
#       #   IgnorePublicAcls : false
#       #   RestrictPublicBuckets : false

#   UserFileBucketPolicy2:
#     Type: AWS::S3::BucketPolicy
#     Properties:
#       Bucket:
#         Ref: UserFileBucket
#       PolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#           - Effect: Allow
#             Action:
#               - "s3:GetObject"
#             Resource:
#               - Fn::Sub: "${UserFileBucket.Arn}/*"
#             Principal: "*"



###################################################
# DynamoDb
###################################################

#################
# DynamoDb - RecipesTable
#################
  RecipesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName:
        Fn::Sub: ${StackName}-${EnvironmentIdentifier}-recipe
      Tags:
        - Key: "cost-allocation"
          Value:
            Fn::Sub: ${StackName}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: created
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        # already in idUser-path-index
        # - IndexName: idUser-index
        #   KeySchema:
        #     - AttributeName: idUser
        #       KeyType: HASH
        #   Projection:
        #     ProjectionType: ALL
        #parent is actually just path...
        # - IndexName: idUser-idParent-index
        #   KeySchema:
        #     - AttributeName: idUser
        #       KeyType: HASH
        #     - AttributeName: idParent
        #       KeyType: RANGE
        #   Projection:
        #     ProjectionType: ALL
        - IndexName: status-created-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: created
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  AppSyncRecipesTablePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows AppSync to access the recipes table.
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              - dynamodb:Query
              # - dynamodb:Scan
              # - dynamodb:BatchGetItem
              # - dynamodb:BatchWriteItem
            Resource:
              Fn::Sub: '${RecipesTable.Arn}*'

  AppSyncRecipesTableRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "cost-allocation"
          Value:
            Fn::Sub: ${StackName}
      RoleName:
        Fn::Sub: ${StackName}-${EnvironmentIdentifier}-appsync-recipes-table-role
      ManagedPolicyArns:
        - Ref: AppSyncRecipesTablePolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com



  # NoneSource:
  #   Type: AWS::AppSync::DataSource
  #   Properties:
  #     ApiId:
  #       Fn::GetAtt: AppSyncApi.ApiId
  #     Name: NoneSource
  #     Type: NONE



#######################################################
# AppSync
#######################################################

#################
# AppSync - AppSyncApi
#################
  AppSyncApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name:
        Fn::Sub: ${StackName}-${EnvironmentIdentifier}-api
      Tags:
        - Key: "cost-allocation"
          Value:
            Fn::Sub: ${StackName}
      XrayEnabled: true
      LogConfig: # https://github.com/aws/aws-appsync-community/issues/190
        CloudWatchLogsRoleArn:
          Fn::GetAtt: AppSyncCloudWatchRole.Arn
        ExcludeVerboseContent: FALSE
        FieldLogLevel: ERROR
      # AuthenticationType: AWS_IAM
      # AuthenticationType: AMAZON_COGNITO_USER_POOLS
      # UserPoolConfig:
      #   AwsRegion: "eu-central-1"
      #   DefaultAction: ALLOW
      #   UserPoolId:
      #     Ref: UserPool
      # # https://youtu.be/7PBizBLaUoU?t=840
      # AdditionalAuthenticationProviders:
      #   AuthenticationType: AWS_IAM
      AuthenticationType: API_KEY

  AppSyncApiKey:
    Type: AWS::AppSync::ApiKey
    Description: "Development key"
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSyncApi
          - ApiId
      # Sat Apr 05 2024 00:00:00 GMT+0000
      Expires: 1712181600

  AppSyncApiKeyTest:
    Type: AWS::AppSync::ApiKey
    Description: "Automated tests key"
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSyncApi
          - ApiId
      # Sat Apr 05 2024 00:00:00 GMT+0000
      Expires: 1712181600

  AppSyncCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "cost-allocation"
          Value:
            Fn::Sub: ${StackName}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com

  AppSyncApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - AppSyncApi
          - ApiId
      Definition: './appsync/schema/AppSyncApi/*.graphql'

  NoneSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Name: NoneSource
      Type: NONE

  RecipesTableSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Name: RecipesTableSource
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt: AppSyncRecipesTableRole.Arn
      DynamoDBConfig:
        TableName:
          Ref: RecipesTable
        AwsRegion:
          Fn::Sub: "${AWS::Region}"


  NotifyNewRecipeLambdaSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Name: NotifyNewRecipeLambdaSource
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt: AppSyncNotifyNewRecipeLambdaRole.Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt: NotifyNewRecipeLambda.Arn


#################
# AppSync - AppSyncApiQueryVersion
#################

  AppSyncApiQueryVersion:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: version
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiQueryVersionFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Query

  AppSyncApiQueryVersionFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Query.version.mjs"
      Name: "Query_version"
      DataSourceName:
        Fn::GetAtt: NoneSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"

# #################
# # AppSync - AppSyncApiMutationRecipeCreate
# #################

  AppSyncApiMutationRecipeCreate:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: recipeCreate
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiMutationRecipeCreateFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Mutation

  AppSyncApiMutationRecipeCreateFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Mutation.recipeCreate.mjs"
      Name: "Mutation_recipeCreate"
      DataSourceName:
        Fn::GetAtt: RecipesTableSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"

# #################
# # AppSync - AppSyncApiMutationRecipePatch
# #################

  AppSyncApiMutationRecipePatch:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: recipePatch
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiQueryRecipeGetByIdFunction.FunctionId
          - Fn::GetAtt: AppSyncApiMutationRecipePatchFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Mutation

  AppSyncApiMutationRecipePatchFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Mutation.recipePatch.mjs"
      Name: "Mutation_recipePatch"
      DataSourceName:
        Fn::GetAtt: RecipesTableSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"

#################
# AppSync - AppSyncApiQueryRecipeGetById
#################

  AppSyncApiQueryRecipeGetById:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: recipeGetById
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiQueryRecipeGetByIdFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Query

  AppSyncApiQueryRecipeGetByIdFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Query.recipeGetById.mjs"
      Name: "Query_recipeGetById"
      DataSourceName:
        Fn::GetAtt: RecipesTableSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"

#################
# AppSync - AppSyncApiQueryRecipeGetByIdVTL
#################

  AppSyncApiQueryRecipeGetByIdVTL:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FieldName: recipeGetById_vtl
      DataSourceName:
        Fn::GetAtt: RecipesTableSource.Name
      TypeName: Query
      RequestMappingTemplate: './appsync/resolvers/vtl/AppSyncApi/Query.recipeGetById.request.vtl'
      ResponseMappingTemplate: './appsync/resolvers/vtl/AppSyncApi/Query.recipeGetById.response.vtl'

#################
# AppSync - AppSyncApiQueryRecipeGetById
#################

  AppSyncApiQueryRecipeList:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: recipeList
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiQueryRecipeListFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Query

  AppSyncApiQueryRecipeListFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Query.recipeList.mjs"
      Name: "Query_recipeList"
      DataSourceName:
        Fn::GetAtt: RecipesTableSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"

#################
# AppSync - AppSyncApiQueryIngredientUrl
#################

  AppSyncApiQueryIngredientUrl:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: url
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiQueryIngredientUrlFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Ingredient

  AppSyncApiQueryIngredientUrlFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Ingredient.url.mjs"
      Name: "Ingredient_url"
      DataSourceName:
        Fn::GetAtt: NoneSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"



# #################
# # AppSync - AppSyncApiMutationRecipeCreate2
# # direct connection to Lambda
# #################

  AppSyncApiMutationRecipeCreate2:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      Code: "./appsync/resolvers/build/AppSyncApi/empty.mjs"
      FieldName: recipeCreate2
      Kind: "PIPELINE"
      PipelineConfig:
        Functions:
          - Fn::GetAtt: AppSyncApiMutationRecipeCreateFunction.FunctionId
          - Fn::GetAtt: AppSyncApiMutationRecipeCreate2NotifyFunction.FunctionId
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"
      TypeName: Mutation

  AppSyncApiMutationRecipeCreate2NotifyFunction:
    Type: AWS::AppSync::FunctionConfiguration
    DependsOn: AppSyncApiSchema
    Properties:
      ApiId:
        Fn::GetAtt: AppSyncApi.ApiId
      FunctionVersion: "2018-05-29"
      Code: "./appsync/resolvers/build/AppSyncApi/Mutation.recipeCreate2.notify.mjs"
      Name: "Mutation_recipeCreate2_notify"
      DataSourceName:
        Fn::GetAtt: NotifyNewRecipeLambdaSource.Name
      Runtime:
        Name: "APPSYNC_JS"
        RuntimeVersion: "1.0.0"


###################################################
# Lambdas
###################################################

#################
# NotifyNewRecipeLambda
#################

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  NotifyNewRecipeLambda:
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        cost-allocation:
          Fn::Sub: ${StackName}
      Description:
        Fn::Sub: Get file upload link (presigned link)
      # CodeUri: s3://webnt-test-install/fileBucket-def.zip
      Handler: build/index.handler
      MemorySize: 512
      Timeout: 10
      Runtime: nodejs18.x
      Tracing: Active
      FunctionName: "NotifyNewRecipeLambda"
      InlineCode: "//test"
      # Policies: #policies to access additional resources
      #   - AWSLambdaExecute # Managed Policy
      #   - Version: '2012-10-17' # Policy Document
      #     Statement:
      #       - Effect: Allow
      #         Action:
      #           - s3:GetObject
      #           - s3:PutObject
      #           #- s3:*
      #         Resource:
      #           - Fn::Sub: ${UserFileBucket.Arn}
      #           - Fn::Sub: ${UserFileBucket.Arn}/*
      #           - Fn::Sub: ${UserFileBucket.Arn}/**/*

  AppSyncNotifyNewRecipeLambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows AppSync to invoke Lambda
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              Fn::GetAtt: NotifyNewRecipeLambda.Arn

  AppSyncNotifyNewRecipeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "cost-allocation"
          Value:
            Fn::Sub: ${StackName}
      RoleName:
        Fn::Sub: ${StackName}-${EnvironmentIdentifier}-appsync-notifynewrecipe-lambda-role
      ManagedPolicyArns:
        - Ref: AppSyncNotifyNewRecipeLambdaPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
